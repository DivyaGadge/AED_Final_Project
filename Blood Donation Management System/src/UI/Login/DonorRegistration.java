/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Login;

import Sql.SQLConnection;
import java.sql.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.volunteerEnt.ngoManagement.NGOManagement;


/**
 *
 * @author surajvisvesh
 */
public class DonorRegistration extends javax.swing.JPanel {

    /**
     * Creates new form DonorRegistration
     */
    public DonorRegistration() {
        initComponents();
        populateNGOCB();
        errorVisibility();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pincodeTF = new javax.swing.JTextField();
        stateError = new javax.swing.JLabel();
        dobLbl = new javax.swing.JLabel();
        registerBtn2 = new javax.swing.JPanel();
        registerLbl2 = new javax.swing.JLabel();
        usernameTF = new javax.swing.JTextField();
        nameError = new javax.swing.JLabel();
        usernameLbl = new javax.swing.JLabel();
        passLbl = new javax.swing.JLabel();
        passError = new javax.swing.JLabel();
        stateLbl = new javax.swing.JLabel();
        emailError = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        phoneNoError = new javax.swing.JLabel();
        passTF = new javax.swing.JTextField();
        streetError = new javax.swing.JLabel();
        emailLbl = new javax.swing.JLabel();
        cityError = new javax.swing.JLabel();
        emailTF = new javax.swing.JTextField();
        usernameError = new javax.swing.JLabel();
        phoneLbl = new javax.swing.JLabel();
        dobError = new javax.swing.JLabel();
        phoneTF = new javax.swing.JTextField();
        pinError = new javax.swing.JLabel();
        streetLbl = new javax.swing.JLabel();
        streetTF = new javax.swing.JTextField();
        cityLbl = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        cityTF = new javax.swing.JTextField();
        stateCB = new javax.swing.JComboBox<>();
        pinLbl = new javax.swing.JLabel();
        bldGropCB = new javax.swing.JComboBox<>();
        bloodGrpLbl = new javax.swing.JLabel();
        NGOError = new javax.swing.JLabel();
        NGOLbl = new javax.swing.JLabel();
        NGOCB = new javax.swing.JComboBox<>();
        dobTF = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 255, 255));

        stateError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        stateError.setForeground(new java.awt.Color(255, 51, 0));
        stateError.setText("Enter valid data");

        dobLbl.setText("DateOfBirth");

        registerBtn2.setBackground(new java.awt.Color(106, 106, 106));
        registerBtn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                registerBtnMousePressed(evt);
            }
        });

        registerLbl2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        registerLbl2.setForeground(new java.awt.Color(255, 255, 255));
        registerLbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        registerLbl2.setText("REGISTER");
        registerLbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                registerLblMousePressed(evt);
            }
        });

        javax.swing.GroupLayout registerBtn2Layout = new javax.swing.GroupLayout(registerBtn2);
        registerBtn2.setLayout(registerBtn2Layout);
        registerBtn2Layout.setHorizontalGroup(
            registerBtn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registerLbl2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
        );
        registerBtn2Layout.setVerticalGroup(
            registerBtn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(registerLbl2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
        );

        nameError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        nameError.setForeground(new java.awt.Color(255, 51, 0));
        nameError.setText("Enter valid data");

        usernameLbl.setText("Username*");

        passLbl.setText("Password*");

        passError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        passError.setForeground(new java.awt.Color(255, 51, 0));
        passError.setText("Enter valid data");

        stateLbl.setText("State*");

        emailError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        emailError.setForeground(new java.awt.Color(255, 51, 0));
        emailError.setText("Enter valid data");

        phoneNoError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        phoneNoError.setForeground(new java.awt.Color(255, 51, 0));
        phoneNoError.setText("Enter valid data");

        passTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passTFActionPerformed(evt);
            }
        });

        streetError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        streetError.setForeground(new java.awt.Color(255, 51, 0));
        streetError.setText("Enter valid data");

        emailLbl.setText("Email*");

        cityError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        cityError.setForeground(new java.awt.Color(255, 51, 0));
        cityError.setText("Enter valid data");

        emailTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTFActionPerformed(evt);
            }
        });

        usernameError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        usernameError.setForeground(new java.awt.Color(255, 51, 0));
        usernameError.setText("Enter valid data");

        phoneLbl.setText("Phone Number*");

        dobError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        dobError.setForeground(new java.awt.Color(255, 51, 0));
        dobError.setText("Enter valid data");

        pinError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        pinError.setForeground(new java.awt.Color(255, 51, 0));
        pinError.setText("Enter valid data");

        streetLbl.setText("Street Address*");

        streetTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetTFActionPerformed(evt);
            }
        });

        cityLbl.setText("City*");

        nameLbl.setText("Name*");

        stateCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "IllinoisIndiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "MontanaNebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "PennsylvaniaRhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming" }));

        pinLbl.setText("Pincode*");

        bldGropCB.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        bldGropCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));

        bloodGrpLbl.setText("Blood Group*");

        NGOError.setFont(new java.awt.Font("Helvetica Neue", 2, 13)); // NOI18N
        NGOError.setForeground(new java.awt.Color(255, 51, 0));
        NGOError.setText("Enter valid data");

        NGOLbl.setText("NGO*");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(usernameLbl)
                        .addGap(466, 466, 466)
                        .addComponent(emailLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(usernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(usernameError)
                        .addGap(109, 109, 109)
                        .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(emailError))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(nameLbl)
                        .addGap(491, 491, 491)
                        .addComponent(phoneLbl))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(nameError)
                                .addGap(119, 119, 119)
                                .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(phoneNoError))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(passTF, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(passError))
                                    .addComponent(passLbl)
                                    .addComponent(stateLbl)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(stateCB, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(stateError))
                                    .addComponent(streetLbl)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(streetTF, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(streetError))
                                    .addComponent(dobLbl)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dobTF, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dobError)))
                                .addGap(116, 116, 116)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bloodGrpLbl)
                                    .addComponent(bldGropCB, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NGOLbl)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(NGOCB, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(NGOError))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(pincodeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(21, 21, 21)
                                            .addComponent(pinError))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(pinLbl)
                                            .addGap(365, 365, 365)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(cityError))
                                    .addComponent(cityLbl)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(459, 459, 459)
                        .addComponent(registerBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(392, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameLbl)
                    .addComponent(emailLbl))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(usernameError)
                        .addComponent(usernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(emailError)))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLbl)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(phoneLbl)))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameError)
                    .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneNoError))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passLbl)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passError)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bloodGrpLbl)
                        .addGap(3, 3, 3)
                        .addComponent(bldGropCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NGOLbl)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NGOError)
                            .addComponent(NGOCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dobLbl)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dobError)
                            .addComponent(dobTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(streetLbl)
                        .addGap(3, 3, 3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cityLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityError))
                        .addGap(43, 43, 43)
                        .addComponent(pinLbl)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pincodeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pinError)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(streetTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(streetError))
                        .addGap(46, 46, 46)
                        .addComponent(stateLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stateCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stateError))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(registerBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void streetTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streetTFActionPerformed

    private void emailTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTFActionPerformed

    private void passTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passTFActionPerformed

    private void registerBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerBtnMousePressed
        try {
            // TODO add your handling code here:
            registerBtnFunctionality();
        } catch (SQLException ex) {
            Logger.getLogger(DonorRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_registerBtnMousePressed

    private void registerLblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerLblMousePressed
        try {
            // TODO add your handling code here:
            errorVisibility();
            registerBtnFunctionality();
        } catch (SQLException ex) {
            Logger.getLogger(OrgRegJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_registerLblMousePressed

    public void populateNGOCB() {

//        query the unique NGOs with approval status approved
//        while(rs.next()){
//            NGOCB.addItem(rs.getString("name"));
    }

    public void registerBtnFunctionality() throws SQLException {

        boolean valid = true;
        long phoneNo = 0;
        int pincode = 0;

        String name = nameTF.getText();
        String username = usernameTF.getText();
        String email = emailTF.getText();
        String password = passTF.getText();
        try {
            phoneNo = Long.parseLong(phoneTF.getText());
        } catch (NumberFormatException e) {
            phoneNoError.setVisible(false);
            valid = false;
        }
        String street = streetTF.getText();
        String city = cityTF.getText();
        String state = stateCB.getSelectedItem().toString();
        try {
            Date date = dobTF.getDate();
        } catch (NullPointerException e) {
            dobError.setVisible(true);
            valid = false;
        }
        String bloodGroup = bldGropCB.getSelectedItem().toString();
        try{
            String NGOCBvalue = NGOCB.getSelectedItem().toString();
        } catch(Exception e) {
            System.out.println("combo box error");
        }
        

        try {
            pincode = Integer.parseInt(pincodeTF.getText());
        } catch (Exception e) {
            pinError.setVisible(true);
            valid = false;
        }
        if (name.isEmpty()) {
            nameError.setVisible(true);
            valid = false;
        }
        if (username.isEmpty()) {
            usernameError.setVisible(true);
            valid = false;
        }
        if (email.isEmpty() || email.length() < 2 || !email.matches("^(.+)@(\\S+)$")) {
            emailError.setVisible(true);
            valid = false;
        }
        if (password.isEmpty()) {
            passError.setVisible(true);
            valid = false;
        }
        if (Long.toString(phoneNo).length() != 10) {
            System.out.println("PhoneNo");
            phoneNoError.setVisible(true);
            valid = false;
        }
        if (street.isEmpty()) {
            streetError.setVisible(true);
            valid = false;
        }
        if (city.isEmpty()) {
            cityError.setVisible(true);
            valid = false;
        }
        if (state.isEmpty()) {
            stateError.setVisible(true);
            valid = false;
        }
        if (Integer.toString(pincode).length() != 6) {
            pinError.setVisible(true);
            valid = false;
        }
        if (valid) {

            System.out.println("Entered valid block.");
//            NGOManagement ngo = new NGOManagement();
//            ngo.setName(name);
//            ngo.setUsername(username);
//            ngo.setEmail(email);
//            ngo.setPhoneNo(phoneNo);
//            ngo.setCity(city);
//            ngo.setStreet(street);
//            ngo.setPassword(password);
//            ngo.setPincode(pincode);
//            ngo.setState(state);
//
//
//            try {
//                System.out.println("entered try block");
//                Connection con = SQLConnection.establishConnection();
//                System.out.println(con);
//                if (con != null) {
//                    System.out.println("entered if con not null block");
//
//                    String query = "INSERT INTO NGO(user_name, Name, Email, Password, Phone_number, Street_address, City, State, Pincode, license) VALUES(?,?,?,?,?,?,?,?,?,?)";
//
//                    PreparedStatement pstmt = con.prepareStatement(query);
//                    pstmt.setString(1, username);
//                    pstmt.setString(2, name);
//                    pstmt.setString(3, email);
//                    pstmt.setString(4, password);
//                    pstmt.setLong(5, phoneNo);
//                    pstmt.setString(6, street);
//                    pstmt.setString(7, city);
//                    pstmt.setString(8, state);
//                    pstmt.setInt(9, pincode);
//
//
//                    int count = pstmt.executeUpdate();
//                    if (count == 1) {
//                        emptyTF();
//
//                        JOptionPane.showMessageDialog(null, "Thanks for registering. We will notify you once your registration is approved.");
//                        System.out.println("Email User.");
//                    }
//                }
//            } catch (SQLException e) {
//                JOptionPane.showMessageDialog(null, "User already exists. Please try a different username or email.", "Error!", JOptionPane.ERROR_MESSAGE);
//
//            }
        }

    }

    public void errorVisibility() {

        nameError.setVisible(false);
        usernameError.setVisible(false);
        emailError.setVisible(false);
        passError.setVisible(false);
        phoneNoError.setVisible(false);
        streetError.setVisible(false);
        cityError.setVisible(false);
        stateError.setVisible(false);
        pinError.setVisible(false);
        dobError.setVisible(false);
        NGOError.setVisible(false);

    }

    public void emptyTF() {
        nameTF.setText("");
        usernameTF.setText("");
        emailTF.setText("");
        phoneTF.setText("");
        passTF.setText("");
        streetTF.setText("");
        cityTF.setText("");
        pincodeTF.setText("");
        dobTF.setCalendar(null);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> NGOCB;
    private javax.swing.JLabel NGOError;
    private javax.swing.JLabel NGOLbl;
    private javax.swing.JComboBox<String> bldGropCB;
    private javax.swing.JLabel bloodGrpLbl;
    private javax.swing.JLabel cityError;
    private javax.swing.JLabel cityLbl;
    private javax.swing.JTextField cityTF;
    private javax.swing.JLabel dobError;
    private javax.swing.JLabel dobLbl;
    private com.toedter.calendar.JDateChooser dobTF;
    private javax.swing.JLabel emailError;
    private javax.swing.JLabel emailLbl;
    private javax.swing.JTextField emailTF;
    private javax.swing.JLabel nameError;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTF;
    private javax.swing.JLabel passError;
    private javax.swing.JLabel passLbl;
    private javax.swing.JTextField passTF;
    private javax.swing.JLabel phoneLbl;
    private javax.swing.JLabel phoneNoError;
    private javax.swing.JTextField phoneTF;
    private javax.swing.JLabel pinError;
    private javax.swing.JLabel pinLbl;
    private javax.swing.JTextField pincodeTF;
    private javax.swing.JPanel registerBtn;
    private javax.swing.JPanel registerBtn1;
    private javax.swing.JPanel registerBtn2;
    private javax.swing.JLabel registerLbl;
    private javax.swing.JLabel registerLbl1;
    private javax.swing.JLabel registerLbl2;
    private javax.swing.JComboBox<String> stateCB;
    private javax.swing.JLabel stateError;
    private javax.swing.JLabel stateLbl;
    private javax.swing.JLabel streetError;
    private javax.swing.JLabel streetLbl;
    private javax.swing.JTextField streetTF;
    private javax.swing.JLabel usernameError;
    private javax.swing.JLabel usernameLbl;
    private javax.swing.JTextField usernameTF;
    // End of variables declaration//GEN-END:variables
}
